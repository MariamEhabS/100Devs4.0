---
import { Icon } from 'astro-icon/components';
import CTA from '~/components/ui/CTA.astro';
import Headline from '~/components/ui/Headline.astro';
import WidgetWrapper from '~/components/ui/WidgetWrapper.astro';
import type { Pricing } from '~/types';

const {
  title = '',
  subtitle = '',
  tagline = '',
  prices = [],

  id,
  // isDark = false,
  classes = {},
  bg = await Astro.slots.render('bg'),
} = Astro.props as Pricing;
---

<WidgetWrapper id={id}  containerClass={`max-w-5xl mx-auto  ${classes?.container ?? ''}`} bg={bg}>
  <Headline title={title} subtitle={subtitle} tagline={tagline} />
  <div class="flex items-stretch justify-center ">
    <div class="grid grid-cols-4  sm:grid-cols-2 md:grid-cols-2 lg:grid-cols-4 xl:grid-cols-4 gap-4 lg:gap-6">
      {
        prices &&
          prices.map(({ title, subtitle, price, period, items, callToAction, hasRibbon = false, ribbonTitle }) => (
            <div class={`col-span-4 mx-auto flex  sm:col-span-1 md:col-span-1 lg:col-span-1 xl:col-span-1`}>
              {price && period && (
                <div class={`flex flex-col rounded-[4px] backdrop-blur border-2 border-white   bg-white shadow-xl px-5 py-5 w-full  justify-between text-center  ${hasRibbon && ribbonTitle && '!border-blue-600 !bg-blue-100'}`}>
                  {hasRibbon && (
                    <div class="absolute top-0 right-0 mr-5 p-3 -mt-5 bg-yellow-500 rounded-full">
                      <svg class="w-3 h-3 fill-current text-white" viewBox="0 0 16 16" xmlns="http://www.w3.org/2000/svg">
                        <path d="M15.145 5.05l-4.316-.627L8.898.513c-.338-.684-1.456-.684-1.794 0l-1.93 3.91-4.317.627a1.002 1.002 0 00-.554 1.707l3.124 3.044-.737 4.3a1 1 0 001.45 1.053L8 13.125l3.862 2.03c.728.381 1.59-.234 1.45-1.054l-.736-4.299L15.7 6.758a1.003 1.003 0 00-.555-1.708z" />
                      </svg>
                    </div>
                  )}
                  <div class="border-b border-b-gray-200 mb-6">
                    {title && (
                      <h3 class="text-left !text-base font-bold ">{title}</h3>
                    )}
                    <div class="">
                      <div class="flex items-end justify-start text-center mb-1 gap-2">
                        
                        <span class="text-3xl font-bold">${price}</span>
                        <span class="text-sm leading-6 lowercase text-gray-600">{period}</span>
                      </div>
                      {subtitle && <p class=" text-[16px] text-left text-gray-600">{subtitle}</p>}
                    </div>
                    {items && (
                      <ul role="list" class=" my-6 text-left">
                        {items.map(
                          ({ description, icon }) =>
                            description && (
                              <li class=" flex items-start gap-2 mb-2 ">
                                <div class="rounded-full bg-transparent mt-1">
                                  <Icon name={icon ? icon : 'tabler:check'} class="w-3 h-3 font-bold text-green-500" />
                                </div>
                                <span class=" text-sm text-gray-600 ">{description}</span>
                              </li>
                            )
                        )}
                      </ul>
                    )}
                  </div>
                  {callToAction && (
                    <div class={` text-[16px] flex justify-center btn border-none bg-blue-600 text-white rounded-md py-2 ${hasRibbon ? 'btn-primary' : ''}`}>
                      {typeof callToAction === 'string' ? (
                        <Fragment set:html={callToAction} />
                      ) : (
                        callToAction && callToAction.text && callToAction.href && <CTA callToAction={callToAction} />
                      )}
                    </div>
                  )}
                </div>
              )}
            </div>
          ))
      }
    </div>
  </div>
</WidgetWrapper>
